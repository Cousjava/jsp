TODO for PFD:
- verify -> http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_1.xsd
        <xsd:complexType name="tld-attributeType">
- License (get from  Karen; have a FIXME on it currently)
- Preface -> requirement for Java SE (more discussions on this)
- Ack for JSP 2.1 (to be written)
- Fix this:
  The JCP and This Specification
  The JCP is designed to be a very flexible process so each expert group can address the requirements of the specific communities it serves. The reference implementation
  for JSP 2.1 ... (PENDING). (do a global search on PENDING as a word to catch
  any other occurrences).
- unresolved cross-references

--------------------------------------------------------------------------
problem with TOC:

open the TOC file
view -> reference pages
  goto table of contents specification
     set the tab with the ellipsis...
            did that, but still does not work
            think I have to do it in the source page as well?

- also, page numbers for APIs in TOC do not have the volume number.

===========================================================================
TODO for Public Review
===========================================================================
- Fix the schema 
- Fix the TOC (ellipsises)
- Print + Full review of the content

---------------------------------------------------------------------------
- review all variables:

- do not generate inherited summaries
    option -noinheritedsummary does not work
    (talk to Doug Kramer)

- when saving the PDF:
   - use condition indicators setting is inconsitent

- mifdoclet complains about JspContext, FacesContext

---------------------------------------------------------------------------
PENDING:

Preface
  - JSP 2.1 requirements
  - <web-app> element for Servlet 2.5
  - Acknowledgements for JSP 2.1

Status
  - JCP and this specification

---------------------------------------------------------------------------
- write an article on the unified EL for java.net?

   An EDR of two key web-tier specs has just been released:
   JSP 2.1 and JSF 1.2. Want to know what's cooking, read on...
   Have the 4 spec-leads be co-authors?

===========================================================================
MODIFICATIONS TO JSP SPEC for JSP 2.1 EDR
===========================================================================
GLOBAL CHANGES

- everywhere we use JSP 2.0
- everywhere we use J2EE 1.4
- everywhere we use Servlet 2.4

-----
Title page
    - updated to 2.1
    - updated editors
    - updated release
    - now mentions the java.net project instead of
      comment alias

-----
Copyright and license

- updated with EDR license

-----
Contents

[generated]

-----
Preface
[L]

- intro paragraph on JSP 2.1
- section Relation To JSP 2.0
- section Backwards Compatibility
- section Migration from JSP 2.0 to JSP 2.1
- updated related documents.
- updated historical note

-----
Status

- Minor Modifs for JSP 2.1.
- pending: RI info

-----
Overview

- minor modifs 
    - JSP 2.0 "added" (instead of "adds"))

-----
1. Core syntax and semantics
[K]

1.3.2 Element Syntax
- EL expressions use the syntax ${expr} as well as #{expr};

1.3.10.1 EBNF grammar for JSP syntax
- updated for #{}
- leave this to Mark
   see also the validity constraints where token ${ is discussed

1.6 -> quoting
isELIgnored and <el-ignored> have been updated to consider #{} as well as ${}
in Table JSP.1-8

-----
2. Expression Language
[F][J]

Has lots of modifications.
We now only focus on the EL within the JSP environment.
Tried to keep as much as possible what already existed there,
and only adjust when required.

Need thorough review from Mark.

-----
3. JSP Configuration

3.3.2 Deactivating EL Evaluation
  ignore #{} with servlet 2.4

-----
4. Internationalization issues

No modification.

-----
5. standard actions

No modification.

-----
6. JSP Documents

No modification.

-----
7. tag extensions

No modification.

-----
8. Tag files

No modification.

-----
9. Scripting

No modification.

-----
10. XML View

10.1.11 Request time attribute expressions
10.1.12 Template Text and XML Elements

-----
11. JSP Container

No modification.

-----
12. Core API

[A] [B] [E]
- modified intro.html to add JspApplicationContext
- JspApplicationContext added to sequence

-----
13. Tag Extension API

No modification... but maybe there are some modifications.
Mark?

-----
14. EL API
[C][D][I]

- in make/html/javax/servlet/jsp/el
    modified intro.html to say that the
    javax.servlet.jsp.el API is now deprecated +
    2 new ELResolver classes.

- Added the 2 new ELREsolver classes.

-----
A. Packaging JSP Pages

No modification.

-----
B. JSP Elements of web.xml

No modification.

-----
C. TLD Formats
[G]

New elements for value-expression and method-expression.
New graphic + schema for JSP 2.1.

-----
D. Page Encoding detection

No modification.

-----
E. Changes

Updated for 2.1

---------------------------------------------------------------------------
Title Page
* Please, put your name first!  Please!  I want you to get credit for`
  all the hard work you've done and that you are about to do :)

Preface
* Migrating section, 1st paragraph: Explicitly mention that your
  applications will run unmodified in a JSP 2.1 container and that
  these changes only apply if you want to upgrade web.xml to 2.5.

JSP.1.1.9.1.
* Update Servlet 2.4 --> Servlet 2.5 (do this globally)

JSP.1.10.1
* isELIgnored in table - instead of saying 'evaluated' say 'recognized',
  since #{} is not technically evaluated in the page.  Its evaluation is
  deferred.

---------------------------------------------------------------------------
Pierre - if you'd like I can help make changes to this and/or other chapters once you're done sweeping for cross reference fixes.  We'll sync up after I'm done with my review.

* Missing File:
  Looking for ../../jspspec_old2/src-new/JSP/doc-files/jsp-ELResolver.gif

JSP.2.1.1
* [Mark, which section is this]
  (re: backwards compatibility)
  I think Eduardo was referring to what is now sections JSP.2.5
  and JSP.2.6 in your draft

JSP.2.1.2
* Make it clear that only ${} is allowed in template text.
  #{} must cause a translation error

JSP.2.2.
* This section should be mvoed to JSP.2.1.1 since it
  deals only with attribute values
* Mention that #{} syntax must be used for value and
  method expressions whereas ${} must be used for
  all other types.
* "The unified expression language also adds..."
  Actually, in the unified EL everything is deferred.
  JSP adds support for not immediately evaluating the
  expression if an attribute is declared as accepting
  a deferred expression.

JSP.2.3.
* Very clear!
* We should add something stating that when the attribute
  is deferred and "xyz" is provided, we need to pass in a
  ValueExpression where isLiteralText() == true

JSP.2.5
* Duplicate ${expr} - should the second be #{expr}?
* Incorrect - ${expr} was reserved before JSP 2.1 (it was reserved
  in JSP 2.0).  Just change JSP 2.1 to JSP 2.0 and it should be
  fine.

JSP.2.9
* CompositeResolver --> CompositeELResolver
* 3-5 - mention that these are constructed in read/write mode

JSP.2.10
* Mention somewhere in this section that function information is bound
  into the ValueExpression or MethodExpression object at parse-time
  and is serialized along with the state of the expression.

---------------------------------------------------------------------------
JSP.3.3.2
* Last paragraph needs to be updated to address \# as well
* We need to address the case I just discussed on the webtier-alignment alias here:

If web.xml is Servlet 2.4 or earlier, and a tag attribute is marked as deferred in its TLD (which is not a backwards-compatibility case), then passing a value with "#{}" is interpreted as a ValueExpression or MethodExpression.  In all other cases, #{} has no special meaning in the page, for backwards compatibility reasons.
